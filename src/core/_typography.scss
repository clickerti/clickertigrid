// CSS variables for typography
:root {
	// Font sizes
	--bigger-font-size: #{toRem(28px)};
	--h1-font-size: #{toRem(24px)};
	--h2-font-size: #{toRem(20px)};
	--h3-font-size: #{toRem(16px)};
	--normal-font-size: #{toRem(15px)};
	--small-font-size: #{toRem(13px)};
	--smaller-font-size: #{toRem(12px)};
	--supersmall-font-size: #{toRem(11px)};
	--heading-line-height: 1.3;
	--body-line-height: normal;

	// Font sizes from lg breakpoint (64em ~ 1024px)
	@include from(lg) {
		--bigger-font-size: #{toRem(36px)};
		--h1-font-size: #{toRem(32px)};
		--h2-font-size: #{toRem(24px)};
		--h3-font-size: #{toRem(20px)};
		--normal-font-size: #{toRem(16px)};
		--small-font-size: #{toRem(14px)};
		--smaller-font-size: #{toRem(13px)};
		--supersmall-font-size: #{toRem(12px)};
	}
}

// Font sizes
$fontSizes: (
	bigger: var(--bigger-font-size),
	title1: var(--h1-font-size),
	title2: var(--h2-font-size),
	title3: var(--h3-font-size),
	normal: var(--normal-font-size),
	small: var(--small-font-size),
	smaller: var(--smaller-font-size),
	supersmall: var(--supersmall-font-size),
);

// Get font size from map
@function fontSize($size) {
	@if map-has-key($fontSizes, $size) {
		@return map-get($fontSizes, $size);
	} @else {
		@error '$size is not valid, valid values are title1, title2, title3, normal, small, smaller, supersmall';
	}
}

// Mixins for heading styles
@mixin heading-font($extrabold: false) {
	line-height: var(--heading-line-height);
	font-family: var(--heading-font);
	letter-spacing: 0.015em;
}

@mixin bigger-title {
	@include heading-font(true);
	font-size: var(--bigger-font-size);
}

@mixin t1 {
	@include heading-font(true);
	font-size: var(--h1-font-size);
}

@mixin t2 {
	@include heading-font(true);
	font-size: var(--h2-font-size);
}

@mixin t3 {
	@include heading-font;
	font-size: var(--h3-font-size);
}

@mixin t4 {
	@include heading-font;
	font-size: var(--normal-font-size);
}

@mixin t5 {
	@include heading-font;
	font-size: var(--small-font-size);
}

@mixin t6 {
	@include heading-font;
	font-size: var(--smaller-font-size);
}

// Mixins for text content styles
@mixin body-font {
	font-family: var(--body-font);
	font-weight: 400;
	line-height: var(--body-line-height);
}

@mixin biggest {
	@include body-font;
	font-size: var(--h1-font-size);
}

@mixin bigger {
	@include body-font;
	font-size: var(--h2-font-size);
}

@mixin big {
	@include body-font;
	font-size: var(--h3-font-size);
}

@mixin normal {
	@include body-font;
	font-size: var(--normal-font-size);
}

@mixin small {
	@include body-font;
	font-size: var(--small-font-size);
}

@mixin smaller {
	@include body-font;
	font-size: var(--smaller-font-size);
}

@mixin supersmall {
	@include body-font;
	font-size: var(--supersmall-font-size);
}

// Assign heading styles
.bigger-title {
	@include bigger-title;
}

h1,
.t1 {
	@include t1;
}

h2,
.t2 {
	@include t2;
}

h3,
.t3 {
	@include t3;
}

h4,
.t4 {
	@include t4;
}

h5,
.t5 {
	@include t5;
}

h6,
.t6 {
	@include t6;
}

// Assign text content styles
.biggest {
	@include biggest;
}

.bigger {
	@include bigger;
}

.big-text {
	@include big;
}

.normal {
	@include normal;
}

.small-text {
	@include small;
}

.smaller {
	@include smaller;
}

.supersmall {
	@include supersmall;
}

// Default text styles
body {
	@include normal;
	color: var(--color-font);
	font-family: var(--body-font);
}

// classes for font-family
.body-font {
	font-family: var(--body-font);
	color: var(--color-font);
}

.heading-font {
	font-family: var(--heading-font);
}

// Blockquote
blockquote {
	@include big;
	font-style: italic;
	letter-spacing: 0.01em;
	margin-left: 2rem;
	position: relative;
	opacity: 0.9;

	@include from(lg) {
		margin-left: 4rem;
	}

	&::before {
		content: "\201C";
		font-family: Georgia, serif;
		font-size: 3em;
		position: absolute;
		top: 0.5em;
		left: -0.6em;
		line-height: 0;
		letter-spacing: -0.5em;
	}
}

// Links
// Menu links doesn't have underline
a {
	color: var(--color-font);

	main & {
		text-decoration: none;

		&:hover {
			text-decoration: underline;
		}
	}
}

::selection {
	background: var(--selection-color);
	color: #fff;
}

.blue-font-color {
	--color-font: #1192ee;
	color: var(--color-font);
}
.green-font-color {
	--color-font: #28a745;
	color: var(--color-font);
}
.red-font-color {
	--color-font: #dc3545;
	color: var(--color-font);
}
.celeste-font-color {
	--color-font: #4fc2f3;
	color: var(--color-font);
}
.orange-font-color {
	--color-font: #ffc107;
	color: var(--color-font);
}
.dark-font-color {
	--color-font: #343a40;
	color: var(--color-font);
}
.sea-font-color {
	--color-font: #30c6ab;
	color: var(--color-font);
}
.text-font-color {
	--color-font: #6c757d;
	color: var(--color-font);
}
.light-font-color {
	--color-font: #eff3f5;
	color: var(--color-font);
}

@for $i from 1 through 9 {
	.weight#{$i * 100} {
		font-weight: $i * 100;
	}
}

@each $size in $sizes {
	@for $i from 1 through 9 {
		@include from($size) {
			.weight#{$i * 100}-#{$size} {
				font-weight: $i * 100;
			}
		}
	}
}
